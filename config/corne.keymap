/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab_combo {
            bindings = <&kp TAB>;
            key-positions = <19 8>;
        };

        screen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_3 {
            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P   &kp G     &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp DEL
&trans  &kp A  &kp R  &kp S   &kp T   &kp D     &kp H   &kp N   &kp E      &kp I    &kp O     &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp K   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC        &kp Q  &kp W  &kp E           &kp R           &kp T    &kp Y    &kp U        &kp I           &kp O    &kp P     &kp DELETE
&kp BACKSPACE  &kp A  &kp S  &mt LEFT_ALT D  &mt LCTRL F     &kp G    &kp H    &mt LCTRL J  &mt LEFT_ALT K  &kp L    &kp SEMI  &kp SQT
&mo 3          &kp Z  &kp X  &kp C           &kp V           &kp B    &kp N    &kp M        &kp COMMA       &kp DOT  &kp FSLH  &rgb_ug RGB_TOG
                             &kp LGUI        &kp LEFT_SHIFT  &mo 2    &kp RET  &kp SPACE    &tog 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &trans  &kp N7        &kp N8  &kp N9  &trans  &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans  &kp N4        &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans     &trans  &kp NUMBER_1  &kp N2  &kp N3  &trans  &trans
                        &trans   &trans   &trans     &trans  &kp N0        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH    &kp DLLR    &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &rgb_ug RGB_EFF
&trans     &trans    &trans  &bt BT_PRV  &bt BT_NXT  &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &rgb_ug RGB_EFR
&trans     &trans    &trans  &trans      &trans      &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans      &trans      &trans       &trans     &trans     &trans
            >;
        };
    };
};

&led_strip { chain-length = <27>; };
